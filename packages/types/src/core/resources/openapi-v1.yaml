openapi: 3.0.3
info:
  title: todo
  description: todo
  version: 1.0.0
servers:
  - url: https://api.yourdomain.com/v1
    description: Main (production) server
tags:
  - name: shopify
    description: Endpoints related to Shopify
paths:
  /v1/health:
    get:
      tags:
        - info
      summary: Check health
      description: ''
      operationId: checkHealth
      responses:
        '200':
          description: Server is up and running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'

  /v1/shopify/session:
    post:
      summary: Store a new session
      tags:
        - shopify
      operationId: storeSession
      requestBody:
        description: The session object to store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopifySessionDto'
      responses:
        '200':
          description: Session stored successfully
          content:
            application/json:
              schema:
                type: boolean
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
  /v1/shopify/session/{id}:
    get:
      summary: Load a session by ID
      tags:
        - shopify
      operationId: loadSession
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The session object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopifySessionDto'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
    delete:
      summary: Delete a session by ID
      tags:
        - shopify
      operationId: deleteSession
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session deleted successfully
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
  /v1/shopify/session/delete:
    post:
      summary: Delete multiple sessions
      tags:
        - shopify
      operationId: deleteSessions
      requestBody:
        description: Array of session IDs to delete
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: Sessions deleted successfully
          content:
            application/json:
              schema:
                type: boolean
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
  /v1/shopify/session/shop/{shop}:
    get:
      summary: Find sessions by shop
      tags:
        - shopify
      operationId: findSessionsByShop
      parameters:
        - name: shop
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Array of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShopifySessionDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
components:
  schemas:
    AppErrorDto:
        type: object
        required:
          - error_code
          - error_description
          - error_uri
          - additional_errors
        description: Application error
        properties:
          error_code:
            type: string
            description: Error code
          error_description:
            type: string
            description: Error description
            nullable: true
          error_uri:
            type: string
            description: Error URI
            nullable: true
          additional_errors:
            type: array
            items:
              type: object
        example:
          error_code: "400"
          error_description: "Bad Request"
          error_uri: null
          additional_errors: []

    HealthDto:
      type: object
      required:
        - status
        - message
      properties:
        message:
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
    HealthStatus:
      type: string
      enum:
        - Up
        - Restricted
        - Down
      example: Up

    ShopifySessionDto:
      type: object
      required:
        - id
        - shop
        - state
        - isOnline
      properties:
        id:
          type: string
          description: The unique identifier for the session.
        shop:
          type: string
          description: The Shopify shop domain.
        state:
          type: string
          description: The state of the session.
        isOnline:
          type: boolean
          description: Whether the access token in the session is online or offline.
        scope:
          type: string
          description: The desired scopes for the access token.
        expires:
          type: number
          description: The date time the access token expires.
        accessToken:
          type: string
          description: The access token for the session.
        userId:
          type: number
          description: The user's ID