import * as v from 'valibot';
import { vValidator } from 'validation-adapters/valibot';

import { openApiRouter } from '../router';

openApiRouter.get('/efficiency-class/arrow', {
	queryValidator: vValidator(
		v.object({
			efficiencyClass: v.picklist(['A', 'B', 'C', 'D', 'E', 'F', 'G']),
			size: v.optional(v.pipe(v.number(), v.maxValue(56), v.minValue(28)))
		})
	),
	handler: (c) => {
		const { efficiencyClass, size = 56 } = c.req.valid('query');
		// TODO:

		return c.text(
			`<svg xmlns="http://www.w3.org/2000/svg" width="100" height="56" viewBox="0 0 100 56" fill="none">
<mask id="mask0_46_82" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="99" height="56">
<path d="M73.4315 0H3C1.34315 0 0 1.34314 0 3V53C0 54.6569 1.34315 56 3 56H73.4315C74.2812 56 75.0911 55.6396 75.66 55.0084L98.19 30.0084C99.2187 28.867 99.2187 27.133 98.19 25.9916L75.66 0.991627C75.0911 0.360378 74.2812 0 73.4315 0Z" fill="#D9D9D9"/>
</mask>
<g mask="url(#mask0_46_82)">
<rect x="21.5587" width="78.3958" height="56" fill="#009640"/>
<path d="M46.0511 43H38.142L50.1932 8.09091H59.7045L71.7386 43H63.8295L55.0852 16.0682H54.8125L46.0511 43ZM45.5568 29.2784H64.2386V35.0398H45.5568V29.2784Z" fill="white"/>
<rect width="22.4299" height="56" fill="white"/>
<path d="M9.77131 19H6.47585L11.4972 4.45455H15.4602L20.4744 19H17.179L13.5355 7.77841H13.4219L9.77131 19ZM9.56534 13.2827H17.3494V15.6832H9.56534V13.2827Z" fill="black"/>
<path d="M16.9091 41.1562C16.8097 40.8106 16.67 40.5052 16.4901 40.2401C16.3101 39.9702 16.09 39.7429 15.8295 39.5582C15.5739 39.3688 15.2803 39.2244 14.9489 39.125C14.6222 39.0256 14.2599 38.9759 13.8622 38.9759C13.1188 38.9759 12.4654 39.1605 11.902 39.5298C11.3433 39.8991 10.9077 40.4366 10.5952 41.142C10.2827 41.8428 10.1264 42.6998 10.1264 43.7131C10.1264 44.7263 10.2803 45.5881 10.5881 46.2983C10.8958 47.0085 11.3314 47.5507 11.8949 47.9247C12.4583 48.294 13.1236 48.4787 13.8906 48.4787C14.5866 48.4787 15.1809 48.3556 15.6733 48.1094C16.1705 47.8584 16.5492 47.5057 16.8097 47.0511C17.0748 46.5966 17.2074 46.0592 17.2074 45.4389L17.8324 45.5312H14.0824V43.2159H20.169V45.0483C20.169 46.3267 19.8991 47.4252 19.3594 48.3438C18.8196 49.2576 18.0762 49.9631 17.1293 50.4602C16.1823 50.9527 15.098 51.1989 13.8764 51.1989C12.5128 51.1989 11.3149 50.8982 10.2827 50.2969C9.25047 49.6908 8.44555 48.8314 7.8679 47.7188C7.29498 46.6013 7.00852 45.2756 7.00852 43.7415C7.00852 42.5625 7.17898 41.5114 7.51989 40.5881C7.86553 39.66 8.34848 38.8741 8.96875 38.2301C9.58902 37.5862 10.3111 37.0961 11.1349 36.7599C11.9588 36.4238 12.8513 36.2557 13.8125 36.2557C14.6364 36.2557 15.4034 36.3764 16.1136 36.6179C16.8239 36.8546 17.4536 37.1908 18.0028 37.6264C18.5568 38.062 19.009 38.5805 19.3594 39.1818C19.7098 39.7784 19.9347 40.4366 20.0341 41.1562H16.9091Z" fill="black"/>
<path d="M16.654 27.3752L11.9241 22.3144L7.18231 27.3882L8.48857 28.7858L11.0006 26.0978V33.4914H12.8477V26.0978L15.3479 28.773L16.654 27.3752Z" fill="black"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M73.4315 1H3C1.89543 1 1 1.89543 1 3V53C1 54.1046 1.89543 55 3 55H73.4315C73.998 55 74.5379 54.7598 74.9172 54.3389L97.4472 29.3389C98.1329 28.578 98.1329 27.422 97.4472 26.6611L74.9172 1.66108C74.5379 1.24025 73.998 1 73.4315 1ZM3 0H73.4315C74.2812 0 75.0911 0.360378 75.66 0.991627L98.19 25.9916C99.2187 27.133 99.2187 28.867 98.19 30.0084L75.66 55.0084C75.0911 55.6396 74.2812 56 73.4315 56H3C1.34315 56 0 54.6569 0 53V3C0 1.34314 1.34315 0 3 0Z" fill="black"/>
</g>
</svg>`,
			200,
			{ 'Content-Type': 'image/svg+xml;charset=utf-8' }
		);
	}
});
